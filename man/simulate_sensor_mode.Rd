% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate_sensor_mode.R
\name{simulate_sensor_mode}
\alias{simulate_sensor_mode}
\title{Simulate Atmospheric Concentration at Sensor Locations}
\usage{
simulate_sensor_mode(sim_dt, puff_dt, output_dt, start_time, end_time, source_coords,
  emission_rate, wind_data, sensor_coords, puff_duration)
}
\arguments{
\item{sim_dt}{Integer. Simulation time step (in seconds), determining how frequently the simulation
updates the positions of puffs and calculates concentrations. This is the base resolution of the simulation.}

\item{puff_dt}{Integer. Time interval (in seconds), determining how frequently new puffs are emitted into
the simulation.}

\item{output_dt}{Integer. Desired time resolution (in seconds) for the final output of concentrations.}

\item{start_time}{POSIXct. Start time of the simulation.}

\item{end_time}{POSIXct. End time of the simulation.}

\item{source_coords}{Numeric vector. Coordinates of the emission source in meters (x, y, z).
E.g, \code{c(x = 10, y = 0, z = 1.5)}.}

\item{emission_rate}{Numeric. Emission rate of the source in kg/s.}

\item{wind_data}{Data frame. Wind data containing columns \code{wind_u} and \code{wind_v},
representing wind components in the x and y directions, respectively, for each simulation step.}

\item{sensor_coords}{Numeric matrix. Coordinates of sensors in meters (x, y, z format); row = sensor.}

\item{puff_duration}{Numeric. Lifetime of each puff (in seconds) before it dissipates. Default at 1200.}
}
\value{
A data frame containing aggregated methane concentrations at sensor locations, with rows
  corresponding to output timestamps and columns to sensors.
}
\description{
Simulates atmospheric concentrations at sensor locations over time using a Gaussian puff forward model.
  Concentrations are calculated based on emission rates, wind conditions, and puff dispersion.
}
\details{
The simulation emits puffs from the specified source at intervals of \code{puff_dt}
  and updates their positions based on wind data at intervals of \code{sim_dt}. Concentrations
  at sensor locations are calculated using a Gaussian puff forward model, which accounts for dispersion
  based on the stability class and other inputs. Finally, concentrations are aggregated
  to match the \code{output_dt} resolution.
}
\examples{
\dontrun{
  set.seed(123)
  sim_dt <- 10
  puff_dt <- 10
  output_dt <- 60
  start_time <- "2024-01-01 12:00:00"
  end_time <- "2024-01-01 13:00:00"
  source_coords <- c(0, 0, 2.5)
  emission_rate <- 3.5
  wind_data <- list(
    wind_u = runif(3601, min = -3, max = 0.7),
    wind_v = runif(3601, min = -3, max = 1.5)
  )
  sensor_coords <- matrix(c(-6.525403221327715e-15, -35.52264, 2.01775), ncol = 3, byrow = TRUE)

  simulate_sensor_mode(
    sim_dt, puff_dt, output_dt, start_time, end_time, source_coords,
    emission_rate, wind_data, sensor_coords, puff_duration
  )
}
}
