% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sensor_mode.R
\name{simulate_sensor_mode}
\alias{simulate_sensor_mode}
\title{Simulate Methane Concentration at Sensor Locations}
\usage{
simulate_sensor_mode(
  time_stamps_sim,
  sensor_coords,
  n_sim,
  num_sources,
  source_coords,
  emission_rates,
  wind_data,
  puff_duration = 1200
)
}
\arguments{
\item{time_stamps_sim}{POSIXct vector. The sequence of timestamps for each simulation time step.}

\item{sensor_coords}{Matrix. A matrix with three columns representing the x, y, and z coordinates
of each sensor where concentrations are calculated.}

\item{n_sim}{Integer. The number of simulation time steps.}

\item{num_sources}{Integer. The number of sources emitting methane.}

\item{source_coords}{Matrix. A matrix with three columns representing the x, y, and z coordinates
of each source.}

\item{emission_rates}{Numeric vector. The emission rates for each source, controlling the rate of methane release.}

\item{wind_data}{List. A list containing wind speed components (`wind_u` for the x-direction and `wind_v`
for the y-direction) interpolated for each simulation time step.}

\item{puff_duration}{Numeric. The time in seconds that a puff remains active before dissipating. Default is 1200 seconds.}
}
\value{
Matrix. A matrix with dimensions `n_sim` by the number of sensors, containing methane concentrations
  at each sensor for each time step.
}
\description{
Calculates methane concentration over time at specified sensor locations
due to emissions from multiple sources. The simulation incorporates
advection, dispersion, and stability class calculations based on wind data.
}
\examples{
time_stamps <- seq(as.POSIXct("2024-01-01 00:00:00"), by = "min", length.out = 60)
sensor_coords <- matrix(c(200, 200, 0, 300, 300, 0, 400, 400, 0), ncol = 3, byrow = TRUE)
source_coords <- matrix(c(25, 25, 2, 75, 25, 2, 50, 75, 3), ncol = 3, byrow = TRUE)
emission_rates <- c(1, 5, 10)
wind_data <- list(wind_u = runif(60, 2, 5), wind_v = runif(60, 1, 3))
simulate_sensor_mode(time_stamps, sensor_coords, 60, 3, source_coords, emission_rates, wind_data)
}
